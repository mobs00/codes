import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report, confusion_matrix

# Generate sample data (Gender: Hair Length, Weight)
np.random.seed(42)
male = np.column_stack([np.random.normal(12, 2, 50), np.random.normal(75, 10, 50)])
female = np.column_stack([np.random.normal(18, 2, 50), np.random.normal(60, 8, 50)])
X = np.vstack([male, female])
y = np.hstack([np.zeros(50), np.ones(50)])

# Split data and scale features
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Train and evaluate KNN classifier
classifier = KNeighborsClassifier(n_neighbors=5)
classifier.fit(X_train_scaled, y_train)
y_pred = classifier.predict(X_test_scaled)

# Results
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))
print("\nClassification Report:")
print(classification_report(y_test, y_pred, target_names=['Male', 'Female']))

# Example prediction
new_person = np.array([[15, 70]])  # Hair length 15cm, weight 70kg
prediction = classifier.predict(scaler.transform(new_person))
print("\nPrediction for [15cm, 70kg]:", "Female" if prediction[0] == 1 else "Male")